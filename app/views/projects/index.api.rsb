api.array :projects, api_meta(:total_count => @project_count, :offset => @offset, :limit => @limit) do
  @projects.each do |project|
    api.project do
      api.id          project.id
      api.name        project.name
      api.identifier  project.identifier
      api.description project.description
      api.parent(:id => project.parent.id, :name => project.parent.name) if project.parent && project.parent.visible?
      api.status      project.status
      api.is_public   project.is_public?

      unless project.geom.nil?
        api.geom RGeo::GeoJSON.encode RGeo::GeoJSON::EntityFactory.instance.feature(
                    RGeo::WKRep::WKBParser.new().parse(project.geom), project.id)
      else
        api.geom ""
      end

      render_api_custom_values project.visible_custom_field_values, api
      render_api_includes(project, api)

      api.created_on  project.created_on
      api.updated_on  project.updated_on
    end
  end
end
